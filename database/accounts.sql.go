// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: accounts.sql

package database

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO aws_account (account_id, account_type)
VALUES ($1, $2) RETURNING account_id, account_type, default_profile
`

type CreateAccountParams struct {
	AccountID   string
	AccountType AwsAccountType
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (AwsAccount, error) {
	row := q.db.QueryRow(ctx, createAccount, arg.AccountID, arg.AccountType)
	var i AwsAccount
	err := row.Scan(&i.AccountID, &i.AccountType, &i.DefaultProfile)
	return i, err
}

const deleteAccount = `-- name: DeleteAccount :exec
DELETE FROM aws_account
where account_id = $1
`

func (q *Queries) DeleteAccount(ctx context.Context, accountID string) error {
	_, err := q.db.Exec(ctx, deleteAccount, accountID)
	return err
}

const getAccount = `-- name: GetAccount :one
SELECT account_id, account_type, default_profile FROM aws_account
WHERE account_id = $1
`

func (q *Queries) GetAccount(ctx context.Context, accountID string) (AwsAccount, error) {
	row := q.db.QueryRow(ctx, getAccount, accountID)
	var i AwsAccount
	err := row.Scan(&i.AccountID, &i.AccountType, &i.DefaultProfile)
	return i, err
}
